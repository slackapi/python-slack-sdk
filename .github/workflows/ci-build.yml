# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions
name: CI Build

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.13"
          - "3.12"
          - "3.11"
          - "3.10"
          - "3.9"
          - "3.8"
          - "3.7"
          - "pypy3.10"
    permissions:
      contents: read
    env:
      CI_LARGE_SOCKET_MODE_PAYLOAD_TESTING_DISABLED: "1"
      FORCE_COLOR: "1"
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - name: Install dependencies
        run: |
          pip install -U pip
          pip install -r requirements/testing.txt
          pip install -r requirements/optional.txt
      - name: Run validation (black/flake8/pytest)
        run: |
          black --check slack/ slack_sdk/ tests/ integration_tests/
          flake8 slack/ slack_sdk/
          PYTHONPATH=$PWD:$PYTHONPATH pytest --cov-report=xml --cov=slack_sdk/ --junitxml=reports/test_report.xml tests/
      - name: Run tests for SQLAlchemy v1.4 (backward-compatibility)
        run: |
          # Install v1.4 for testing
          pip install "SQLAlchemy>=1.4,<2"
          PYTHONPATH=$PWD:$PYTHONPATH pytest tests/slack_sdk/oauth/installation_store/test_sqlalchemy.py
          PYTHONPATH=$PWD:$PYTHONPATH pytest tests/slack_sdk/oauth/state_store/test_sqlalchemy.py
      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@47f89e9acb64b76debcd5ea40642d25a4adced9f # v1.1.1
        with:
          directory: ./reports/
          flags: ${{ matrix.python-version }}
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
      - name: Upload test coverage to Codecov (only with latest supported version)
        if: startsWith(matrix.python-version, '3.13')
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5.4.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          # Run validation generates the coverage file
          files: ./coverage.xml
